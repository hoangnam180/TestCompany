{
    "sourceFile": "src/Components/header/Header.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1651939323326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1651939323326,
            "name": "Commit-0",
            "content": "/** @format */\r\n\r\nimport styled from \"styled-components\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Input } from \"antd\";\r\nimport Logo from \"../../Assets/logo/popcorn.png\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../../context/itemmovie-context\";\r\nimport Switch from \"../switch/Switch\";\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: black;\r\n  padding: 1rem;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n  justify-content: space-between;\r\n  .header_logo {\r\n    width: 4.8rem;\r\n    height: 4.8rem;\r\n    margin: 0 1.5rem;\r\n  }\r\n  .header_logobox {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .header_title {\r\n    color: #ffb6c1;\r\n    font-size: 2.5rem;\r\n    font-weight: bold;\r\n    margin: 0;\r\n    position: relative;\r\n    .header_title_inner {\r\n      position: absolute;\r\n      font-size: 13px;\r\n      color: #bcdded;\r\n    }\r\n  }\r\n  .header_icon {\r\n    font-size: 2.5rem;\r\n    color: #666;\r\n    margin: 0 1rem;\r\n  }\r\n  .header_searchbox {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    background-color: white;\r\n    border-radius: 0.6rem;\r\n    margin-left: 2rem;\r\n    width: 40%;\r\n    overflow: hidden;\r\n    input {\r\n      outline: none;\r\n    }\r\n  }\r\n  .input_search {\r\n    flex: 1;\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 1.6rem;\r\n  }\r\n  @media only screen and (max-width: 1023px) {\r\n    .header_searchbox {\r\n      padding: 0.5rem;\r\n      input {\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n  @media only screen and (max-width: 735px) {\r\n    .header_title {\r\n      font-size: 2rem;\r\n    }\r\n    .header_logo {\r\n      width: 4.2rem;\r\n      height: 4rem;\r\n      margin: 0 0.5rem;\r\n    }\r\n    .header_searchbox {\r\n      padding: 0.1rem;\r\n    }\r\n  }\r\n`;\r\nconst Menu = styled.div`\r\n  padding: 0 2rem;\r\n  padding-top: 2rem;\r\n  .navigation {\r\n    list-style: none;\r\n    display: flex;\r\n    gap: 2rem;\r\n  }\r\n  .navigation_link {\r\n    display: block;\r\n    width: 15rem;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    color: #fff;\r\n    font-size: 2rem;\r\n    padding: 5px;\r\n    transition: all 0.25s linear;\r\n    &.light {\r\n      color: rgb(0 0 0 / 82%);\r\n    }\r\n    &.light:hover {\r\n      background-color: #00000042;\r\n    }\r\n    &.light.active {\r\n      background-color: #00000042;\r\n    }\r\n    &.active {\r\n      background-color: #eaeaea;\r\n      color: #333;\r\n    }\r\n    &:hover {\r\n      background-color: #eaeaea;\r\n      color: #333;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1023px) {\r\n    .navigation_link {\r\n      width: auto;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 735px) {\r\n    .navigation {\r\n      width: 100%;\r\n      overflow-x: auto;\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n    }\r\n    .navigation_link {\r\n      width: 12rem;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = props => {\r\n  let navigate = useNavigate();\r\n  const { setInputSearch, setType, type } = useContext(UserContext);\r\n  const [input, setInput] = useState();\r\n  //text Search\r\n  const handleSearch = e => {\r\n    let result = e.target.value.toLowerCase();\r\n    if (result === \"\") {\r\n      setInputSearch(\"\");\r\n    }\r\n    setInput(result);\r\n  };\r\n  //click on search\r\n  const onSearch = () => {\r\n    navigate(\"/search\");\r\n    setInputSearch(input);\r\n  };\r\n  //onKeySearch\r\n  const onKeySearch = e => {\r\n    if (e.keyCode === 13) {\r\n      navigate(\"/search\");\r\n      setInputSearch(input);\r\n    }\r\n    if (e.keyCode === 27) {\r\n      setInputSearch(\"\");\r\n      setInput(\"\");\r\n    }\r\n  };\r\n  const arrNav = [\r\n    {\r\n      path: \"/\",\r\n      name: \"Trang chủ\",\r\n    },\r\n    {\r\n      path: \"/phimbo\",\r\n      name: \"Phim bộ\",\r\n    },\r\n    {\r\n      path: \"/phimchieurap\",\r\n      name: \"Phim chiếu rạp\",\r\n    },\r\n    {\r\n      path: \"/phimhoathinh\",\r\n      name: \"Phim hoạt hình\",\r\n    },\r\n    {\r\n      path: \"/phimle\",\r\n      name: \"Phim lẻ\",\r\n    },\r\n  ];\r\n  const handleClick = (id, item) => {};\r\n  const handleType = () => {\r\n    setType(!type);\r\n  };\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <div\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n          className='header_logobox'>\r\n          <img className='header_logo' src={Logo} alt='logo' />\r\n          <h1 className='header_title'>\r\n            Home19<span className='header_title_inner'>film</span>\r\n          </h1>\r\n        </div>\r\n        <div style={{ marginLeft: \"auto\", marginTop: \"auto\" }}>\r\n          <Switch onClick={handleType} />\r\n        </div>\r\n        <div className='header_searchbox'>\r\n          <SearchOutlined onClick={onSearch} className='header_icon' />\r\n          <Input\r\n            value={input}\r\n            onKeyDown={onKeySearch}\r\n            onChange={handleSearch}\r\n            placeholder='Tìm tên phim'\r\n            className='input_search'\r\n          />\r\n        </div>\r\n      </HeaderWrapper>\r\n      <Menu>\r\n        <ul className='navigation'>\r\n          {arrNav.map((item, index) => {\r\n            return (\r\n              <li key={index}>\r\n                <NavLink\r\n                  to={item.path}\r\n                  onClick={() => handleClick(index, item)}\r\n                  className={`navigation_link ${type ? \"light\" : \"\"}`}>\r\n                  {item.name}\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"
        }
    ]
}